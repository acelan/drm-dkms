--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -67,7 +67,7 @@
 /* General customization:
  */
 
-#define DRIVER_NAME		"i915"
+#define DRIVER_NAME		"i915_bpo"
 #define DRIVER_DESC		"Intel Graphics"
 #define DRIVER_DATE		"20160711"
 
--- a/drivers/gpu/drm/i915/Kconfig
+++ b/drivers/gpu/drm/i915/Kconfig
@@ -1,4 +1,4 @@
-config DRM_I915
+config DRM_I915_BPO
 	tristate "Intel 8xx/9xx/G3x/G4x/HD Graphics"
 	depends on DRM
 	depends on X86 && PCI
@@ -34,7 +34,7 @@ config DRM_I915
 	  i810 driver instead, and the Atom z5xx series has an entirely
 	  different implementation.
 
-config DRM_I915_PRELIMINARY_HW_SUPPORT
+config DRM_I915_BPO_PRELIMINARY_HW_SUPPORT
 	bool "Enable preliminary support for prerelease Intel hardware by default"
 	depends on DRM_I915
 	default n
@@ -46,7 +46,7 @@ config DRM_I915_PRELIMINARY_HW_SUPPORT
 
 	  If in doubt, say "N".
 
-config DRM_I915_USERPTR
+config DRM_I915_BPO_USERPTR
 	bool "Always enable userptr support"
 	depends on DRM_I915
 	select MMU_NOTIFIER
--- a/drivers/gpu/drm/i915/Makefile
+++ b/drivers/gpu/drm/i915/Makefile
@@ -7,7 +7,7 @@ subdir-ccflags-$(CONFIG_DRM_I915_WERROR)
 # Please keep these build lists sorted!
 
 # core driver code
-i915-y := i915_drv.o \
+i915_bpo-y := i915_drv.o \
 	  i915_irq.o \
 	  i915_params.o \
 	  i915_pci.o \
@@ -18,11 +18,11 @@ i915-y := i915_drv.o \
 	  intel_pm.o \
 	  intel_runtime_pm.o
 
-i915-$(CONFIG_COMPAT)   += i915_ioc32.o
-i915-$(CONFIG_DEBUG_FS) += i915_debugfs.o
+i915_bpo-$(CONFIG_COMPAT)   += i915_ioc32.o
+i915_bpo-$(CONFIG_DEBUG_FS) += i915_debugfs.o
 
 # GEM code
-i915-y += i915_cmd_parser.o \
+i915_bpo-y += i915_cmd_parser.o \
 	  i915_gem_batch_pool.o \
 	  i915_gem_context.o \
 	  i915_gem_debug.o \
@@ -46,17 +46,17 @@ i915-y += i915_cmd_parser.o \
 	  intel_uncore.o
 
 # general-purpose microcontroller (GuC) support
-i915-y += intel_guc_loader.o \
+i915_bpo-y += intel_guc_loader.o \
 	  i915_guc_submission.o
 
 # autogenerated null render state
-i915-y += intel_renderstate_gen6.o \
+i915_bpo-y += intel_renderstate_gen6.o \
 	  intel_renderstate_gen7.o \
 	  intel_renderstate_gen8.o \
 	  intel_renderstate_gen9.o
 
 # modesetting core code
-i915-y += intel_audio.o \
+i915_bpo-y += intel_audio.o \
 	  intel_atomic.o \
 	  intel_atomic_plane.o \
 	  intel_bios.o \
@@ -73,11 +73,11 @@ i915-y += intel_audio.o \
 	  intel_psr.o \
 	  intel_sideband.o \
 	  intel_sprite.o
-i915-$(CONFIG_ACPI)		+= intel_acpi.o intel_opregion.o
-i915-$(CONFIG_DRM_FBDEV_EMULATION)	+= intel_fbdev.o
+i915_bpo-$(CONFIG_ACPI)		+= intel_acpi.o intel_opregion.o
+i915_bpo-$(CONFIG_DRM_FBDEV_EMULATION)	+= intel_fbdev.o
 
 # modesetting output/encoder code
-i915-y += dvo_ch7017.o \
+i915_bpo-y += dvo_ch7017.o \
 	  dvo_ch7xxx.o \
 	  dvo_ivch.o \
 	  dvo_ns2501.o \
@@ -102,13 +102,13 @@ i915-y += dvo_ch7017.o \
 	  intel_tv.o
 
 # virtual gpu code
-i915-y += i915_vgpu.o
+i915_bpo-y += i915_vgpu.o
 
 ifeq ($(CONFIG_DRM_I915_GVT),y)
-i915-y += intel_gvt.o
+i915_bpo-y += intel_gvt.o
 include $(src)/gvt/Makefile
 endif
 
-obj-$(CONFIG_DRM_I915)  += i915.o
+obj-$(CONFIG_DRM_I915_BPO)  += i915_bpo.o
 
 CFLAGS_i915_trace_points.o := -I$(src)
